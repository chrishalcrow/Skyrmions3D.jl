using Skyrmions3D
using GLMakie
using CSV
using DataFrames
using Serialization
using LinearAlgebra
GLMakie.activate!()
Makie.inline!(false)


nuc = Skyrmion([60, 60, 60], [0.2, 0.2, 0.2], mpi = 0.5, Fpi = 108, ee = 4.84, boundary_conditions = "dirichlet")

p1(z) = z
q1(z) = 1
f1(r) = 4 * atan(exp(-r))

make_rational_map!(nuc, p1, q1, f1)

gradient_flow!(nuc,tolerance=0.01,checks=1,dt=0.0004)

Energy(nuc)
set_metric!(nuc,1)

nuc4 = deserialize("l120_B4M0_metric1.0")
vMOI = compute_current(nuc,label="vMOI")
evecs = eigvecs(vMOI)


lin_interpolate(nuc,[50.5,50.5,50.5])


arrested_newton_flow!(nuc, tolerance = 0.01, checks = 50, dt=0.01)

plot_overview(nuc)


nuc = deserialize("l120_B1M01.0")

results = DataFrame(Metric = Float64[], Isospin = Float64[], Energy = Float64[])

for metric in 1:0.1:10
    set_metric!(nuc, metric)
    arrested_newton_flow!(nuc, tolerance = 0.01, checks = 1, dt=0.005)
    energy = 12*pi*pi*Energy(nuc)
    isospin = Berger_Isospin(nuc) 
    push!(results, (Metric = metric, Isospin = isospin, Energy = energy))
    filename = "l120_B1M05  $(metric)"
    serialize(filename, nuc)
end

CSV.write("p2_110l_B1M0_t001.csv", results)


plot_overview(nuc)
